"""add table

Revision ID: c0aea6931214
Revises: 
Create Date: 2019-10-16 23:17:19.611720

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c0aea6931214'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('config_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('password_hash', sa.String(length=500), nullable=False),
    sa.Column('email', sa.String(length=500), nullable=False),
    sa.Column('email_confirmation_token', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('password_reset_token', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('frequency_capping_enabled', sa.Boolean(), nullable=True),
    sa.Column('max_frequency', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('config_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email_confirmation_token'),
    sa.UniqueConstraint('password_reset_token'),
    sa.UniqueConstraint('username')
    )
    op.create_table('chatbots',
    sa.Column('chatbot_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('language', sa.String(length=30), nullable=False),
    sa.Column('model_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('archive_options', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('chatbot_id'),
    sa.UniqueConstraint('model_id')
    )
    op.create_index(op.f('ix_chatbots_user_id'), 'chatbots', ['user_id'], unique=False)
    op.create_table('datasets',
    sa.Column('dataset_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('language', sa.String(length=30), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('dataset_id')
    )
    op.create_index(op.f('ix_datasets_user_id'), 'datasets', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_datasets_user_id'), table_name='datasets')
    op.drop_table('datasets')
    op.drop_index(op.f('ix_chatbots_user_id'), table_name='chatbots')
    op.drop_table('chatbots')
    op.drop_table('users')
    # ### end Alembic commands ###
